#!/usr/bin/env bash

##############################################
#   Author: RMCJ <rmichael1001@gmail.com>
#   Project: pactools
#   Version: 1.0
#
#   Usage: [flags]
#
#   Description:
#	Browse installed pacman packages
##############################################

##############################################
# PRE-PROCESSING

# shellcheck disable=SC1091
source "${SCRIPTS:=$HOME/.local/bin}"/00-api.sh

DISABLE_ROOT || exit 1

##############################################
# HELP MENU BUILDER

SCRIPT_VERSION="1.0"
SCRIPT_DESCRIPTION="description"
SCRIPT_USAGE="[FLAG]"

# Examples
EXAMPLE "--remove-orphans" "Remove orphaned packages"

# Flags
FLAG "-b, --browse" "" "Browse/search for pacman packages"
FLAG "-u, --update-mirrors" "" "Update mirrors to fastest available"
FLAG "-l, --list-orphans" "" "List orphaned packages (former dependencies)"
FLAG "-r, --remove-orphans" "" "Remove orphaned packages"

##############################################
# MAIN LOGIC

function pactools.browse() {
	trap 'exit 0' SIGINT SIGHUP

	REQUIRE_CMD "pacman" || return 1

	pacman -Qq | fzf --preview 'pacman -Qil {}' --layout=reverse --bind 'enter:execute(pacman -Qil {} | less)'
}

function pactools.refresh_mirrors() {
	REQUIRE_CMD "reflector" || return 1

	sudo reflector --latest 100 --protocol https --sort rate --verbose --save /etc/pacman.d/mirrorlist
}

function pactools.list_orphans() {
	REQUIRE_CMD "pacman" || return 1
	pacman -Qtdq
}

function pactools.remove_orphans() {
	REQUIRE_CMD "pacman" || return 1
	pacman -Qtdq | sudo pacman -Rns -
}

[[ $# -eq 0 ]] && {
	HELP
	exit 0
}

while [[ $# -gt 0 ]]; do
	case "$(LOWERCASE "$1")" in

	-b | --browse)
		shift
		pactools.browse
		PAUSE
		clear
		;;

	-u | --update-mirrors)
		shift
		pactools.refresh_mirrors
		PAUSE
		clear
		;;

	-l | --list-orphans)
		shift
		pactools.list_orphans
		PAUSE
		clear
		;;

	-r | --remove-orphans)
		shift
		pactools.remove_orphans
		PAUSE
		clear
		;;

	\? | -h | --help)
		shift
		HELP
		exit 0
		;;

	*)
		INVALID_CMD "${1}"
		exit 1
		;;

	esac
done
