#!/bin/bash

#  ██╗  ██╗███████╗ ██████╗██╗  ██╗███████╗██████╗ ███████╗██╗  ██╗███████╗██╗     ██╗
#  ██║  ██║██╔════╝██╔════╝██║ ██╔╝██╔════╝██╔══██╗██╔════╝██║  ██║██╔════╝██║     ██║
#  ███████║█████╗  ██║     █████╔╝ █████╗  ██████╔╝███████╗███████║█████╗  ██║     ██║
#  ██╔══██║██╔══╝  ██║     ██╔═██╗ ██╔══╝  ██╔══██╗╚════██║██╔══██║██╔══╝  ██║     ██║
#  ██║  ██║███████╗╚██████╗██║  ██╗███████╗██║  ██║███████║██║  ██║███████╗███████╗███████╗
#  ╚═╝  ╚═╝╚══════╝ ╚═════╝╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚══════╝╚══════╝╚══════╝
#

##############################################
# PRE-PROCESSING

# shellcheck disable=SC1091
source "${SCRIPTS:=$HOME/.local/bin}"/00-api.sh

DISABLE_ROOT || exit 1

##############################################
# MAIN LOGIC

function extract.help() {
	PRINT "$(SCRIPTNAME) - Extract various archive files"
	PRINT
	PRINT "Usage: $(SCRIPTNAME) <archive1> <archive2> ..."
	PRINT
	PRINT "Supported file types:"
	PRINT "- tar.bz2"
	PRINT "- tar.gz"
	PRINT "- bz2"
	PRINT "- rar"
	PRINT "- gz"
	PRINT "- tar"
	PRINT "- tbz2"
	PRINT "- tgz"
	PRINT "- zip"
	PRINT "- Z"
	PRINT "- 7z"
	PRINT "- deb"
	PRINT "- tar.xz"
	PRINT "- tar.zst"
	PRINT
	exit 0
}

# Determine if an argument is a file (not symlink, folder, etc.)
function extract.isFile() {
	[[ ! -f "${1}" ]] && PRINT "'${1}' is not a file." && return 1

	[[ -f "${1}" ]] && return 0

	PRINT "Unknown error" && return 1
}

# Show help prompt and exit script if no args are given or '?', '-h', or '--help' are present anywhere in arguments.
[[ $# -eq 0 ]] && extract.help && exit 0

for arg in "$@"; do

	case "${arg}" in

	\? | -h | --help) extract.help ;;

	esac

done

# For every argument, determine if argument is file, and extract if it is.
# If an argument isn't a file or doesn't match an extension, throw an error.
while [[ $# -gt 0 ]]; do

	case "${1}" in
	*.tar.bz2)
		REQUIRE_CMD "tar"
		extract.isFile "${1}" && tar xjf "${1}"
		;;
	*.tar.gz)
		REQUIRE_CMD "tar"
		extract.isFile "${1}" && tar xzf "${1}"
		;;
	*.bz2)
		REQUIRE_CMD "bunzip"
		extract.isFile "${1}" && bunzip "${1}"
		;;
	*.rar)
		REQUIRE_CMD "unrar"
		extract.isFile "${1}" && unrar x "${1}"
		;;
	*.gz)
		REQUIRE_CMD "gunzip"
		extract.isFile "${1}" && gunzip "${1}"
		;;
	*.tar)
		REQUIRE_CMD "tar"
		extract.isFile "${1}" && tar xf "${1}"
		;;
	*.tbz2)
		REQUIRE_CMD "tar"
		extract.isFile "${1}" && tar xjf "${1}"
		;;
	*.tgz)
		REQUIRE_CMD "tar"
		extract.isFile "${1}" && tar xzf "${1}"
		;;
	*.zip)
		REQUIRE_CMD "unzip"
		extract.isFile "${1}" && unzip "${1}"
		;;
	*.Z)
		REQUIRE_CMD "uncompress"
		extract.isFile "${1}" && uncompress "${1}"
		;;
	*.7z)
		REQUIRE_CMD "7z"
		extract.isFile "${1}" && 7z x "${1}"
		;;
	*.deb)
		REQUIRE_CMD "ar"
		extract.isFile "${1}" && ar x "${1}"
		;;
	*.tar.xz)
		REQUIRE_CMD "tar"
		extract.isFile "${1}" && tar xf "${1}"
		;;
	*.tar.zst)
		REQUIRE_CMD "unzstd"
		extract.isFile "${1}" && unzstd "${1}"
		;;
	*)
		PRINT "'${1}' cannot be extracted." && exit 1
		;;
	esac

	shift

done
