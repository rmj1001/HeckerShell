#!/usr/bin/env bash

##############################################
#   Author: Roy Conn
#   Project: update
#   Version: 1.0
#
#   Usage: update
#
#   Description: Update all software on your
#	linux PC.
##############################################

# shellcheck disable=SC1091
source "${SCRIPTS:=$HOME/.local/bin}"/00-api.sh

# Preprocessor flags
DISABLE_ROOT

####################################

LOG() {
	local folder

	folder="${HOME}/.local/share/com.github.rmj1001.dotfiles.updater/logs"
	logfile="${folder}/$(date -u +"%Y-%m-%dT%H").log"

	mkdir -p "${folder}"
	touch "${logfile}"
	"${@}" >>"${logfile}" 2>&1
}

UPDATER() {
	local interactive=1

	while test $# -gt 0; do

		[[ "${1}" == "--noninteractive" || "${1}" == "-n" ]] &&
			interactive=0 &&
			shift && continue

		# Required command and command to eval
		req="${1}" cmd="${2}"
		shift
		shift

		# If cmd does not exist, continue loop
		CMD_EXISTS "${req}" || continue

		test $interactive -eq 0 && clear

		test $interactive -eq 0 && LOG eval "${cmd}" &&
			{
				CMD_EXISTS "notify-send" &&
					notify-send -i info -t 250 "Updated '${req}'."

				PRINT "Updated '${req}'."
			} && continue

		NPRINT "Update \"${req}\"? (Y/n) " && read -r confirm

		CHECK_YES "${confirm}" && PRINT "Updating ${req}...\n" &&
			eval "${cmd}" &&
			PAUSE && continue

		PRINT "Skipped updating \"${req}\"" && PAUSE && continue

	done

	test $interactive -eq 0 && CMD_EXISTS "notify-send" &&
		notify-send -i info -t 250 "Updates finished." && exit 0

	clear && PRINT "Updates finished." && exit 0

}

ENTRIES=(
	"flatpak" "flatpak update --assumeyes"
	"snap" "sudo snap refresh"
	"brew" "brew upgrade"
	"apt" "sudo apt update && sudo apt upgrade"
	"dnf" "sudo dnf update --assumeyes"
	"rpm-ostree" "rpm-ostree upgrade --assumeyes"
	"pacman" "sudo pacman -Syu --noconfirm"
	"yay" "yay -Sua --noconfirm"
	"paru" "paru -Sua --noconfirm"
)

{ test "${1}" == "--noninteractive" || test "${1}" == "-n"; } &&
	{
		UPDATER -n "${ENTRIES[@]}"
		exit 0
	}

UPDATER "${ENTRIES[@]}"
