#!/usr/bin/env bash

##############################################
#   Author: Roy Conn
#   Project: update
#   Version: 1.0
#
#   Usage: update
#
#   Description: Update all software on your
#	linux PC.
##############################################

# shellcheck disable=SC1091
source "${SCRIPTS:=$HOME/.local/bin}"/00-api.sh

# Preprocessor flags
DISABLE_ROOT

####################################

UPDATER() {

	while test $# -gt 0; do

		# Required command and command to eval
		req="${1}" cmd="${2}"; shift; shift

		# If cmd does not exist, return with error code 1
		CMD_EXISTS "${req}" || continue

		clear

		read -rp "Update \"${req}\"? (Y/n) " confirm

		CHECK_YES "${confirm}" && PRINT "Updating ${req}...\n" && eval "${cmd}" && PAUSE && continue
		PRINT "Skipped updating \"${req}\"" && PAUSE && continue

	done
}

UPDATER \
	"flatpak" "flatpak update" \
	"snap" "sudo snap refresh" \
	"brew" "brew upgrade" \
	"apt" "sudo apt update && sudo apt upgrade" \
	"dnf" "sudo dnf update" \
	"rpm-ostree" "rpm-ostree upgrade" \
	"pacman" "sudo pacman -Syu --noconfirm" \
	"yay" "yay -Sua --noconfirm" \
	"paru" "paru -Sua --noconfirm" \

#########################################################
# Below is the old method for using the UPDATER function.
# it's still valid syntax, but it would introduce too
# many 'while' loops.
#
# UPDATER "flatpak" "flatpak update"
# UPDATER "snap" "sudo snap refresh"
# UPDATER "brew" "brew upgrade"
# UPDATER "apt" "sudo apt update && sudo apt upgrade"
# UPDATER "dnf" "sudo dnf update"
# UPDATER "rpm-ostree" "rpm-ostree upgrade"
# UPDATER "pacman" "sudo pacman -Syu --noconfirm"
# UPDATER "yay" "yay -Sua --noconfirm"
# UPDATER "paru" "paru -Sua --noconfirm"
#
#########################################################

clear
PRINT "Updates finished."
PAUSE
clear

