#!/usr/bin/env bash

##############################################
#   Author: RMCJ <rmichael1001@gmail.com>
#   Project: update
#   Version: 1.0
#
#   Usage: update
#
#   Description: Update all software on your
#	linux PC.
##############################################

# shellcheck disable=SC1091
source "${SCRIPTS:=$HOME/.local/bin}"/00-api.sh

# Preprocessor flags
DISABLE_ROOT
TITLE "Updater"

####################################

interactive=1
clearscr=1
notifications=1

function _help() {
	PRINT "$(SCRIPTNAME) - Update system applications in batches."
	PRINT
	PRINT "Usage:\t\t$(SCRIPTNAME) <flag> <args?>"
	PRINT "Example:\t$(SCRIPTNAME) --help"
	PRINT
	{
		PRINT "-------------|------|---------------------"
		PRINT "Flag|Args|Description"
		PRINT "-------------|------|---------------------"
		PRINT "||"
		PRINT "-i, --non-interactive||Disable interactivity & clearing screen"
		PRINT "-c, --no-clear||Disable clearing screen"
		PRINT "-n, --notifications||Send notifications to system"
		PRINT "||"
		PRINT "-h, --help|n/a|Show this prompt"
	} | column -t -s'|'
}

function LOG() {
	local folder

	folder="${HOME}/.local/share/com.github.rmj1001.dotfiles.updater/logs"
	logfile="${folder}/$(date -u +"%Y-%m-%dT%H").log"

	mkdir -p "${folder}"
	touch "${logfile}"
	"${@}" >>"${logfile}" 2>&1
}

function UPDATE() {
	req="${1}" cmd="${2}"
	shift
	shift

	# If cmd does not exist, return error.
	CMD_EXISTS "${req}" || return 1

	[[ $interactive -eq 0 ]] && LOG eval "${cmd}" &&
		{
			[[ $notifications -eq 0 ]] && CMD_EXISTS "notify-send" &&
				notify-send -i info -t 250 "Updated '${req}'."

			PRINT "Updated '${req}'."
		} && return 0

	PRINT "\n"
	[[ $clearscr -eq 1 ]] && clear

	NPRINT "Update \"${req}\"? (Y/n) " && read -r confirm

	CHECK_YES "${confirm}" && PRINT "Updating ${req}...\n" &&
		eval "${cmd}" &&
		PAUSE && return 0

	PRINT "Skipped updating \"${req}\"" && PAUSE && return 1
}

for arg in "${@}"; do

	case "${arg}" in
	-n | --notifications) notifications=0 ;;
	-i | --non-interactive) interactive=0 ;;
	-c | --no-clear) clearscr=0 ;;
	\? | -h | --help)
		_help
		exit 0
		;;
	esac

done

[[ $clearscr -eq 1 && ! $interactive -eq 0 ]] && clear

UPDATE "flatpak" "flatpak update --assumeyes"
UPDATE "snap" "sudo snap refresh"
UPDATE "brew" "brew upgrade"
UPDATE "apt" "sudo apt update && sudo apt upgrade"
UPDATE "dnf" "sudo dnf update --assumeyes"
UPDATE "rpm-ostree" "rpm-ostree upgrade --assumeyes"
UPDATE "pacman" "sudo pacman -Syu --noconfirm"
UPDATE "yay" "yay -Sua --noconfirm"
UPDATE "paru" "paru -Sua --noconfirm"

[[ $clearscr -eq 1 && ! $interactive -eq 0 ]] && clear
PRINT "\n\nFinished updates!"
