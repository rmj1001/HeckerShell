#!/usr/bin/env bash

##############################################
#   Author: Roy Conn
#   Project: cleaner
#   Version: 1.0
#
#   Usage: cleaner [flags] [args] ...
#
#   Description:
#		System cleaner script
##############################################

# shellcheck disable=SC1091
source "${SCRIPTS:=$HOME/.local/bin}"/00-api.sh

# Preprocessing flags
DISABLE_ROOT

####################################

_help () {
	_flags () {
		PRINT "-------------|------|---------------------"
		PRINT "Flag|Args|Description"
		PRINT "-------------|------|---------------------"
		PRINT "||"
		PRINT "-w, --wine|n/a|Uninstall WINE and remove its files"
		PRINT "-a, --all|n/a|Run all cleaning modules"
		PRINT "||"
		PRINT "-h, --help|n/a|Show this prompt"
	}

	PRINT "$(SCRIPTNAME) - System cleaner script"
	PRINT
	PRINT "Usage:\t\t$(SCRIPTNAME) <flag> <args?>"
	PRINT "Example:\t$(SCRIPTNAME) --help"
	PRINT
	_flags | column -t -s'|'
}

_wine () {
	REQUIRE_CMD "wine" || return 1

	CMD_EXISTS "dnf" && sudo dnf remove wine -y
	CMD_EXISTS "pacman" && sudo pacman -Rnsv wine wine-gecko wine-mono winetricks wine-staging
	CMD_EXISTS "apt" && sudo apt remove wine-stable-amd wine-stable-i386 wine-stable && \
		sudo apt autoremove

	# Removes all leftover wine applications
	[[ -d ${HOME}/.wine ]] && rm -rf ${HOME}/.wine

	# The lines below will remove all entries for any windows software
	# installed with WINE from your application menu(s). Make sure to
	# remove them using your menu editor as well.

	rm -f "$HOME"/.config/menus/applications-merged/wine*
	rm -rf "$HOME"/.local/share/applications/wine
	rm -f "$HOME"/.local/share/desktop-directories/wine*
	rm -f "$HOME"/.local/share/icons/????_*.{xpm,png}
	rm -f "$HOME"/.local/share/icons/*-x-wine-*.{xpm,png}
}

# If no arguments are give, just show help prompt.
[[ $# -eq 0 ]] && _help && exit 0

# Iterate over all arguments and evaluate them
while test $# -gt 0; do

	case "$(LOWERCASE ${1})" in

		-w | --wine ) shift; _wine ;;

		-a | --all ) shift; _wine ;;

		\? | -h | --help ) shift; _help; exit 0 ;;

		* ) PRINT "$(SCRIPTNAME): Invalid argument '${1}'" && exit 1 ;;

	esac

done

