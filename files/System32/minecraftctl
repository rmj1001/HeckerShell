#!/usr/bin/env bash

##############################################
# Author: Roy Conn
# Project: minecraftctl
# Version: 1.0
#
# Usage: minecraftctl [command] [args]
#
# Description:
#	Manage minecraft installations
##############################################

# shellcheck disable=SC1091
source "${SCRIPTS:=$HOME/.local/bin}"/00-api.sh

# Preprocessor flags
DISABLE_ROOT
REQUIRE_CMD "wget" "tar" "ar"

####################################

desktopEntry="/usr/share/applications/minecraft-launcher.desktop"
downloadLink="https://launcher.mojang.com/download/Minecraft.deb"
launcherPath1="/opt/minecraft-launcher"
launcherPath2="/opt/minecraft"

minecraftctl.install() {
	# Clear Screen
	clear

	# Variables
	local link="${downloadLink}"
	local dentry="${desktopEntry}"

	# Download
	cd "$HOME"/Downloads || return 1

	# If deb file exists, delete and download new one, otherwise just download
	[[ -f "Minecraft.deb" ]] && clear && rm -f ./Minecraft.deb
	wget "${link}"

	PRINT "Installing Minecraft..."

	# Install the deb file
	sudo ar xf Minecraft.deb
	sudo tar xf data.tar.xz -C /
	sudo rm control.tar.gz data.tar.xz debian-binary

	# Desktop Entry
	entryText="Exec=env JAVA_HOME=/usr/lib64/openjdk-8 ${launcherPath1}/minecraft-launcher"

	# Create the desktop entry
	PRINT "${entryText}" | sudo tee -a "${dentry}"

	# Confirmation
	clear
	PRINT "Installation finished."
	PRINT
	PAUSE
	clear
}

minecraftctl.remove() {
	# Clear screen
	clear

	local launcherExisted=0 # Tracks existence of launcher directories
	local filesExisted=0	# Tracks existence of any files from minecraftctl.

	# Remove launcher files
	[[ -e "${launcherPath1}" ]] && launcherExisted=1 && sudo rm -rf ${launcherPath1} && sleep 1.5
	[[ -e "${launcherPath2}" ]] && launcherExisted=1 && sudo rm -rf ${launcherPath2} && sleep 1.5
	[[ ${launcherExisted} -eq 1 ]] && filesExisted=1 && PRINT "Removed launcher."

	# Remove desktop entry
	[[ -e "${desktopEntry}" ]] && filesExisted=1 \
		&& sudo rm -f ${desktopEntry} && PRINT "Removed desktop entry." && sleep 1.5

	# Confirmation
	[[ ${filesExisted} -eq 1 ]] && PRINT "Uninstallation finished." || PRINT "Minecraft is not installed."
	PAUSE
	clear
}

minecraftctl.help() {

	minecraftctl.help.commands() {
		PRINT "Flag|Arguments|Description"
		PRINT "(-i) --install||Install minecraft"
		PRINT "(-r) --remove||Uninstall minecraft"
		PRINT "(-u) --update||Update minecraft"
		PRINT "(-h) --help||Show this help menu"
	}

	PRINT
	PRINT "Manage your minecraft installation"
	PRINT
	PRINT "Usage:\t\tminecraftctl [flag] <args?[]>"
	PRINT "Example:\tminecraftctl --install"
	PRINT
	minecraftctl.help.commands | column -t -s "|"
}

[[ $# -eq 0 ]] && minecraftctl.help && exit 0

case "$(LOWERCASE ${1})" in
	-i | --install)
		minecraftctl.install
		;;
	-r | --remove)
		minecraftctl.remove
		;;
	-u | --update)
		minecraftctl.remove && minecraftctl.install
		;;
	\? | -h | --help)
		minecraftctl.help
		;;
	*)
		PRINT "'${1}' is an invalid subcommand!"
		;;
esac

