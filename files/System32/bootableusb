#!/usr/bin/env bash

##############################################
#	Author: Roy Conn
#	Project: bootableusb
#	Version: 1.0
#
#	Usage: bootableusb <iso> <disk>
#
#	Description:
#		Create a bootable USB drive from an
#		ISO file
##############################################

# shellcheck disable=SC1091
source "${SCRIPTS:=$HOME/.local/bin}"/00-api.sh

# Preprocessor flags
DISABLE_ROOT
REQUIRE_CMD "pv" || exit 1

####################################

FORMAT=0

_format() {
	sudo dd if=/dev/zero of="${DISK}" bs=512 count=1
	sync
}

_write() {
	sudo -- bash -c "cat ${ISO} | pv > ${DISK}"
	sync
}

_help() {
	PRINT "$(SCRIPTNAME) - Create a bootable USB drive"
	PRINT
	PRINT "Usage:\t\t$(SCRIPTNAME) <flag> <args?>"
	PRINT "Example:\t\t$(SCRIPTNAME) --iso <iso> --drive <drive>"
	PRINT "Example:\t\t$(SCRIPTNAME) -i ubuntu.iso -i /dev/sdb"
	PRINT
	{
		PRINT "-------------|------|---------------------"
		PRINT "Flag|Args|Description"
		PRINT "-------------|------|---------------------"
		PRINT "||"
		PRINT "-f, --format|n/a|Format the drive as FAT32"
		PRINT "-i, --iso|<iso file>|The ISO to burn (required)"
		PRINT "-d, --disk|<usb>|The usb to make bootable (required)"
		PRINT "||"
		PRINT "-h, --help|n/a|Show this prompt"
	} | column -t -s'|'
}

while test $# -gt 0; do
	case "$1" in
	-h | --help | \?)
		shift
		_help
		shift
		;;
	-i | --iso)
		shift

		[[ -z "${1}" ]] && PRINT "$(SCRIPTNAME): You must provide an ISO path. Use '--help' for more info." && continue
		ISO="$(realpath "${1}")"

		shift
		;;
	-d | --disk)
		shift

		[[ -z "${1}" ]] && PRINT "$(SCRIPTNAME): You must provide a disk path. Use '--help' for more info." && continue
		DISK="$(realpath "${1}")"

		shift
		;;
	-f | --format)
		shift
		FORMAT=1
		;;
	*)
		PRINT "$(SCRIPTNAME): '$1' is not a recognized flag!"
		exit 1
		;;
	esac
done

# Detect if ISO or disk are provided
[[ -z "${ISO}" || -z "${DISK}" ]] && PRINT "$(SCRIPTNAME): You must provide both an ISO and disk. See '--help' for more info." && exit 1

# Grab ISO path, determine if it's valid, exit if not.
[[ ! ${ISO} =~ .*\.iso ]] && PRINT "Invalid ISO" && exit 1
[[ ! -e "${ISO}" ]] && PRINT "ISO '${1}' does not exist." && exit 1

# Grab disk path, determine if it's valid, exit if not.
[[ ! ${DISK} =~ \/dev\/.* ]] && PRINT "Invalid disk" && exit 1
[[ ! -e "${DISK}" ]] && PRINT "Disk '${2}' does not exist." && exit 1

# Unmount, format (if specified), write
sudo umount -R "${DISK}"
[[ $FORMAT -eq 1 ]] && _format
_write
